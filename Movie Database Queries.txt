#Examples are from the Udemy course SQL for Data Analysis:  Weekender Crash Course
#The course provided a database based on a movie store concept.  
#There were 23 various tables related to movie details, store inventory and customer data.
#Exercises invloved pulling data from the various tables to evaluate details about movies and stores.


#Find the customer information, first name, last name and email from store 2.
SELECT first_name, last_name, email, store_id
FROM customer
WHERE store_id = 2;


#Films by Rating
#Determine how many movies there are in each of the rating categories.
SELECT count(film_id), rating
FROM film
GROUP BY rating
ORDER BY count(film_id);

#Films by Rating and Price with group subtotals
#Determine how many films there are by rating, and within each rating how many by rental price.
SELECT count(film_id), rating, rental_rate
FROM film
GROUP BY rating, rental_rate with ROLLUP;

#Films by Price then Rating
#How many films there are by price, and by rating within each price group.
SELECT count(film_id), rental_rate, rating
FROM film
GROUP BY rental_rate, rating
ORDER BY count(film_id);

#customer ID, name and address
#Find the customer information
SELECT customer.customer_id, customer.first_name, customer.last_name, address.address
FROM customer, address
WHERE customer.address_id = address.address_id;

#Film information including title, category and language.
#Find the category and language of each film in the inventory
SELECT film.title, 
	category.name as category_name, 
	language.name as language_name
FROM 
	film, film_category, category, language
WHERE 
	film.film_id = film_category.film_id 
	AND film_category.category_id = category.category_id 
	AND film.language_id = language.language_id
ORDER BY film.film_id;

#Video Rentals
#How many times has each video been rented
SELECT
    count(r.rental_id), 
	f.title 
FROM
    rental r, inventory i, film f
WHERE
    r.inventory_id = i.inventory_id 
    AND i.film_id = f.film_id
GROUP BY f.title;

#What films are making the most money
#revenue = price * number of rentals
SELECT
    f.title as "Film Title", count(r.rental_id) as "Number of Rentals", f.rental_rate as "Rental Rate", count(r.rental_id) * f.rental_rate as Revenue
FROM
    rental r, inventory i, film f
WHERE
    r.inventory_id = i.inventory_id 
    AND i.film_id = f.film_id
GROUP BY 1
ORDER BY 4 desc;

#What customer has spent the most money on rentals
SELECT
    p.customer_id, SUM(p.amount)
FROM
    payment p
GROUP BY
    1
ORDER BY
    2 desc;

#Which store generates the most revenue
#revenu equals the total amount of payments made at each store
SELECT
    i.store_id as "Store ID", 
    SUM(p.amount) as "Total Paments"
FROM
    inventory i, rental r, payment p
WHERE
    i.inventory_id = r.inventory_id
    AND r.rental_id = p.rental_id
GROUP BY
    1
ORDER BY
    2 desc;

#Rentals By Month
#Determine total movie rentals by month
SELECT
    left(r.rental_date,7), count(r.rental_id)
FROM 
    rental r
GROUP BY
    1
ORDER BY
    2 desc;
    
    
#Rental Dates
#Determine the first and last dates a movie was rented
SELECT
    f.title as "Film Title", max(r.rental_date) as "Last Rental Date", min(r.rental_date) as "First Rental Date"
FROM 
    rental r, inventory i, film f
WHERE
    r.inventory_id = i.inventory_id
    AND i.film_id = f.film_id
GROUP BY 
    f.film_id;
    
    
#Customer Last Rental
#Find the date of each customer's last rental
SELECT 
    concat(c.first_name, " ", c.last_name) as "Customer Name", c.email as "Customer E-Mail", MAX(r.rental_date) as "Last Rental Date"
FROM
    rental r, customer c
WHERE
    r.customer_id = c.customer_id
GROUP BY
    r.customer_id;
    
    
#Revenue By Month
#Determine total revenue by month
SELECT
    sum(p.amount) as "Total Revenue", left(p.payment_date,7) as "Month"
FROM
    payment p
GROUP BY
    2;

#How many distinct Renters Per Month
#Number of customers renting and average number of movies rented
SELECT
    left(r.rental_date, 7) as "Month", count(r.rental_id) as "total_rentals", count(distinct r.customer_id) as "unique_renters", count(r.rental_id)/count(distinct r.customer_id) as "avg_num_rentals_per_renter"
FROM 
    rental r
GROUP BY 
    1;
        
#Number Of Distinct Film Rentals
#Determine the number of distinct rentals by movie title and month
SELECT
    count(r.rental_id) as "Total Rentals", count(distinct i.film_id) as "Unique Films Rented", left(r.rental_date, 7) as "Rental Month", count(r.rental_id)/count(distinct i.film_id) as "Rentals Per Film"
FROM
    rental r, inventory i
WHERE
   i.inventory_id = r.inventory_id
GROUP BY
    3;

#Of Rentals in Comedy, Sports and Family
SELECT
    c.name as category, count(r.rental_id) as num_rentals
FROM
    rental r, inventory i, film f, film_category fc, category c
WHERE
    r.inventory_id = i.inventory_id
    AND i.film_id = f.film_id
    AND f.film_id = fc.film_id
    AND fc.category_id = c.category_id
    AND c.name IN ("Comedy", "Sports", "Family")
GROUP BY
    1;
    
#Users Rented 3 times
#Find the users who have rented at least three times
SELECT
    r.customer_id as "Customer", count(r.rental_id) as "Number of Rentals"
FROM
    rental r
GROUP BY 1
HAVING count(r.rental_id) >=3;

#Store One Revenue For R and PG-13
#What is the revenue for store 1 from rentals of R and PG-13 movies 
#between June 8 and July 19
SELECT
    i.store_id as "Store", f.rating as "Movie Rating", sum(p.amount) as "Store Revenue"
FROM
    film f, rental r, payment p, inventory i
WHERE
    f.film_id = i.film_id
    AND r.inventory_id = i.inventory_id
    AND r.rental_id = p.rental_id
    AND f.rating IN ("R", "PG-13")
    AND i.store_id = 1
    AND r.rental_date BETWEEN '2005-06-08' AND '2005-07-19'
GROUP BY
    1,2
ORDER BY
    3 desc;
